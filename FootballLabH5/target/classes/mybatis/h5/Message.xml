<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MessageMapper">
<resultMap id="BaseResultMap" type="com.visolink.h5.entity.Message" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="Member_ID" property="memberId" jdbcType="INTEGER" />
    <result column="Message_ID" property="messageId" jdbcType="INTEGER" />
    <result column="Message_Desc" property="messageDesc" jdbcType="VARCHAR" />
    <result column="Message_Publish_Time" property="messagePublishTime" jdbcType="TIMESTAMP" />
    <result column="Message_Status" property="messageStatus" jdbcType="INTEGER" />
     <result column="Message_Title" property="messageTitle" jdbcType="VARCHAR" />
      <result column="Message_Publisher_ID" property="messagePublisherId" jdbcType="INTEGER" />
       <result column="Message_Publisher_Name" property="messagePublisherName" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <select id="selectMessageByID" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  SELECT ID, Member_ID, Message_ID, Message_Desc, Message_Publish_Time, Message_Status, Message_Title, Message_Publisher_ID, 
  Message_Publisher_Name FROM h5_member_message where Member_ID=#{ID}
  
  </select>
  
  <!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into h5_member_message(
			ID,	
			MEMBER_ID,	
			MESSAGE_ID,	
			MESSAGE_DESC,	
			MESSAGE_PUBLISH_TIME,	
			MESSAGE_STATUS,	
			MESSAGE_TITLE,	
			MESSAGE_PUBLISHER_ID,	
			MESSAGE_PUBLISHER_NAME
		) values (
			#{ID},	
			#{MEMBER_ID},	
			#{MESSAGE_ID},	
			#{MESSAGE_DESC},	
			#{MESSAGE_PUBLISH_TIME},	
			#{MESSAGE_STATUS},	
			#{MESSAGE_TITLE},	
			#{MESSAGE_PUBLISHER_ID},	
			#{MESSAGE_PUBLISHER_NAME}
		)
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from h5_member_message
		where 
			ID = #{ID}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  h5_member_message
			set 
				MEMBER_ID = #{MEMBER_ID},
				MESSAGE_ID = #{MESSAGE_ID},
				MESSAGE_DESC = #{MESSAGE_DESC},
				MESSAGE_PUBLISH_TIME = #{MESSAGE_PUBLISH_TIME},
				MESSAGE_STATUS = #{MESSAGE_STATUS},
				MESSAGE_TITLE = #{MESSAGE_TITLE},
				MESSAGE_PUBLISHER_ID = #{MESSAGE_PUBLISHER_ID},
				MESSAGE_PUBLISHER_NAME = #{MESSAGE_PUBLISHER_NAME}
			where 
				ID = #{ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			ID,	
			MEMBER_ID,	
			MESSAGE_ID,	
			MESSAGE_DESC,	
			MESSAGE_PUBLISH_TIME,	
			MESSAGE_STATUS,	
			MESSAGE_TITLE,	
			MESSAGE_PUBLISHER_ID,	
			MESSAGE_PUBLISHER_NAME
		from 
			h5_member_message
		where 
			ID = #{ID}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.ID,	
				a.MEMBER_ID,	
				a.MESSAGE_ID,	
				a.MESSAGE_DESC,	
				a.MESSAGE_PUBLISH_TIME,	
				a.MESSAGE_STATUS,	
				a.MESSAGE_TITLE,	
				a.MESSAGE_PUBLISHER_ID,	
				a.MESSAGE_PUBLISHER_NAME
		from 
				h5_member_message a
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
				a.ID,	
				a.MEMBER_ID,	
				a.MESSAGE_ID,	
				a.MESSAGE_DESC,	
				a.MESSAGE_PUBLISH_TIME,	
				a.MESSAGE_STATUS,	
				a.MESSAGE_TITLE,	
				a.MESSAGE_PUBLISHER_ID,	
				a.MESSAGE_PUBLISHER_NAME
		from 
				h5_member_message a
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from h5_member_message
		where 
			ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
  
</mapper>