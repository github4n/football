<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ExpertsMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into TB_EXPERTS(
			experts_id,
			experts_code,	
			experts_name,	
			experts_icon,	
			experts_info,	
			add_time,	
			add_user,	
			status,	
			app_id,
			app_secret,
			partner_id,
			partner_key,
			wx_num
		) values (
			#{experts_id},	
			#{experts_code},	
			#{experts_name},	
			#{experts_icon},	
			#{experts_info},	
			#{add_time},	
			#{add_user},	
			#{status},
			#{app_id},
			#{app_secret},
			#{partner_id},
			#{partner_key},
			#{wx_num}
		)
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from tb_experts
		where 
			experts_id = #{experts_id}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  tb_experts
			set 
				experts_code = #{experts_code},
				experts_name = #{experts_name},
				experts_icon = #{experts_icon},
				experts_info = #{experts_info},
				update_time = #{update_time},
				update_user = #{update_user},
				app_id = #{app_id},
				app_secret = #{app_secret},
				partner_id = #{partner_id},
				partner_key = #{partner_key},
				wx_num = #{wx_num}
			where 
				experts_id = #{experts_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			*
		from 
			tb_experts
		where 
			experts_id = #{experts_id}
	</select>
	
		
	<!-- 通过code获取数据 -->
	<select id="findByCode" parameterType="pd" resultType="pd">
		select 
			*
		from 
			TB_EXPERTS
		where 
			EXPERTS_CODE = #{EXPERTS_CODE}
	</select>
	
		<!-- 通过微信初始id获取数据 -->
	<select id="findByWxNum" parameterType="pd" resultType="pd">
		select 
			*
		from 
			TB_EXPERTS
		where 
			WX_NUM = #{WX_NUM}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.EXPERTS_CODE,	
				a.EXPERTS_NAME,	
				a.STATUS,	
				a.EXPERTS_ID
		from 
				TB_EXPERTS a
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
				a.EXPERTS_CODE,	
				a.EXPERTS_NAME,	
				a.EXPERTS_ICON,	
				a.EXPERTS_INFO,	
				a.ADD_TIME,	
				a.ADD_USER,	
				a.UPDATE_TIME,	
				a.UPDATE_USER,	
				a.STATUS,	
				a.EXPERTS_ID
		from 
				TB_EXPERTS a
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from TB_EXPERTS
		where 
			EXPERTS_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<update id="approve" parameterType="pd">
	update tb_experts set
			status = #{status}
	where 	experts_id = #{experts_id}
	</update>
	
	<!-- 专家的用户统计 -->
	<select id="listMemberCount" parameterType="pd" resultType="pd">
		select
				a.*, 
				( select count(member_id)  from tb_member where fk_experts_id = a.experts_id and focus_status = '1' and open_id is not null) as focusCount,
				( select count(member_id)  from tb_member where fk_experts_id = a.experts_id and register_status = '1' and open_id is not null) as registerCount,
				( select count(member_id)  from tb_member where fk_experts_id = a.experts_id and focus_status = '1' and focus_time like '%' #{nowDate} '%'  and open_id is not null) as nowFocusCount,
				( select count(member_id)  from tb_member where fk_experts_id = a.experts_id and focus_status = '1' and register_time like '%' #{nowDate} '%'  and open_id is not null) as nowRegisterCount
		from 
				tb_experts a
	</select>
	
	
</mapper>